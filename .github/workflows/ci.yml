name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  # Run daily to catch issues with dependencies
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: read

jobs:
  # Detect changes to optimize CI runs
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      sources: ${{ steps.filter.outputs.sources }}
      generators: ${{ steps.filter.outputs.generators }}
      package: ${{ steps.filter.outputs.package }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            sources:
              - 'src/sources/**'
            generators:
              - 'src/generators/**'
              - 'src/types/**'
            package:
              - 'package.json'
              - 'bun.lockb'
              - 'tsconfig*.json'

  lint-and-format:
    name: Lint and Format
    runs-on: ubuntu-latest
    needs: changes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check TypeScript
        run: bun run typecheck

      - name: Validate source data
        run: |
          # Validate JSON files
          for file in src/sources/**/*.json; do
            if ! jq empty "$file" 2>/dev/null; then
              echo "❌ Invalid JSON in $file"
              exit 1
            fi
          done
          echo "✅ All JSON files are valid"

      - name: Check for circular dependencies
        run: |
          # Simple check for circular imports in generated files
          if grep -r "circular\|Circular" src/generators/; then
            echo "⚠️ Warning: Potential circular dependency detected"
          fi

  test-generation:
    name: Test Type Generation
    runs-on: ubuntu-latest
    needs: changes
    if: |
      needs.changes.outputs.sources == 'true' || 
      needs.changes.outputs.generators == 'true' ||
      github.event_name == 'schedule'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Clean previous generation
        run: bun run clean

      - name: Generate types
        run: bun run generate

      - name: Build package
        run: bun run build

      - name: Verify generation completeness
        run: |
          # Check that all expected files were generated
          EXPECTED_FILES=(
            "src/generated/game-logic/skills.ts"
            "src/generated/game-logic/items.ts"
            "src/generated/game-logic/actions.ts"
            "src/generated/schemas/zod/skills.ts"
            "src/generated/schemas/typebox/skills.ts"
            "src/generated/player-data/index.ts"
          )

          for file in "${EXPECTED_FILES[@]}"; do
            if [ ! -f "$file" ]; then
              echo "❌ Missing expected file: $file"
              exit 1
            fi
          done

          echo "✅ All expected files generated"

      - name: Test imports
        run: |
          # Test that the package can be imported (ES modules)
          cat > test-import.mjs << 'EOF'
          try {
            const mwiTypes = await import('./dist/index.js');
            console.log('✅ ES module import successful');
            console.log('Exported modules:', Object.keys(mwiTypes).length > 0 ? 'Found exports' : 'No exports');
          } catch (e) {
            console.error('❌ ES module import failed:', e.message);
            process.exit(1);
          }
          EOF

          node test-import.mjs
          
          # Test TypeScript types
          cat > test-types.ts << 'EOF'
          import type { Skill, Item, Action } from './dist/index.js';
          import { SKILLS } from './dist/index.js';
          
          // Test that types are properly exported
          const testSkill: Skill = SKILLS[0];
          console.log('✅ TypeScript types working correctly');
          EOF
          
          # Just check if it compiles, don't run it
          bun tsc test-types.ts --noEmit --esModuleInterop --skipLibCheck --moduleResolution node

  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    needs: changes
    if: |
      needs.changes.outputs.generators == 'true' || 
      needs.changes.outputs.package == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Generate and build
        run: |
          bun run generate
          bun run build

      - name: Analyze bundle size
        run: |
          # Calculate sizes
          TOTAL_SIZE=$(du -sh dist | cut -f1)
          GENERATED_SIZE=$(du -sh src/generated | cut -f1)

          echo "📊 Bundle Analysis Report"
          echo "========================"
          echo "Generated source size: $GENERATED_SIZE"
          echo "Built package size: $TOTAL_SIZE"
          echo ""

          # Detailed breakdown
          echo "📁 Size by directory:"
          du -sh dist/* | sort -h

          # Count files
          echo ""
          echo "📄 File counts:"
          echo "Generated TypeScript files: $(find src/generated -name "*.ts" | wc -l)"
          echo "Built JavaScript files: $(find dist -name "*.js" | wc -l)"
          echo "Type definition files: $(find dist -name "*.d.ts" | wc -l)"

      - name: Upload size report
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: |
            dist/
          retention-days: 7

  # Summary job to ensure all checks pass
  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    if: always()
    needs:
      - lint-and-format
      - test-generation
      - bundle-analysis

    steps:
      - name: Check results
        run: |
          if [[ "${{ needs.lint-and-format.result }}" == "failure" ]] || \
             [[ "${{ needs.test-generation.result }}" == "failure" ]] || \
             [[ "${{ needs.bundle-analysis.result }}" == "failure" ]]; then
            echo "❌ One or more CI checks failed"
            exit 1
          else
            echo "✅ All CI checks passed"
          fi
