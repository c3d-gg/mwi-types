name: Generate Types

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      create_pr:
        description: 'Create a PR with the changes'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

  # Trigger on changes to source data files
  push:
    branches:
      - main
      - develop
    paths:
      - 'src/sources/**/*.json'
      - 'src/generators/**/*.ts'
      - 'src/types/**/*.ts'

  # Allow running on PRs to test generation
  pull_request:
    paths:
      - 'src/sources/**/*.json'
      - 'src/generators/**/*.ts'
      - 'src/types/**/*.ts'

permissions:
  contents: write
  pull-requests: write

jobs:
  generate:
    name: Generate Types
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # Full history for better diffs

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Get Bun cache directory
        id: bun-cache
        run: echo "dir=$(bun pm cache dir)" >> $GITHUB_OUTPUT

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.bun-cache.outputs.dir }}
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Clean previous generated files
        run: bun run clean

      - name: Generate types
        run: bun run generate
        env:
          NODE_ENV: production

      - name: Run type check
        run: bun run typecheck

      - name: Check for changes
        id: changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in generated files"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi

      - name: Create Pull Request
        if: |
          steps.changes.outputs.has_changes == 'true' && 
          github.event_name == 'push' && 
          (github.event.inputs.create_pr != 'false' || github.event_name != 'workflow_dispatch')
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: regenerate types from updated game data'
          title: 'ü§ñ Update generated types'
          body: |
            ## ü§ñ Automated Type Generation

            This PR was automatically created due to changes in the source data or generators.

            ### Changes
            - Generated types have been updated to match the latest game data
            - All TypeScript compilation checks have passed

            ### Files Changed
            ```
            ${{ steps.changed-files.outputs.all }}
            ```

            ### Next Steps
            1. Review the generated changes
            2. Ensure no breaking changes for consumers
            3. Update CHANGELOG.md if there are breaking changes
            4. Merge when ready

            ---
            *Generated by GitHub Actions workflow: generate-types.yml*
          branch: auto/update-generated-types
          delete-branch: true
          labels: |
            automated
            types
            dependencies

      - name: Upload generated files as artifacts
        if: steps.changes.outputs.has_changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: generated-types
          path: src/generated/
          retention-days: 7

      - name: Comment on PR
        if: |
          github.event_name == 'pull_request' && 
          steps.changes.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ö†Ô∏è **Type Generation Notice**: This PR contains changes that will trigger type regeneration. Please ensure the changes are intentional.'
            })
