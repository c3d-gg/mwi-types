name: Publish to NPM

on:
  # Manual trigger with version input
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string
      tag:
        description: 'NPM tag (latest, beta, next)'
        required: false
        default: 'latest'
        type: choice
        options:
          - latest
          - beta
          - next
          - canary

  # Called by other workflows
  workflow_call:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        type: string
      tag:
        description: 'NPM tag'
        required: false
        default: 'latest'
        type: string

permissions:
  contents: write # For creating releases
  id-token: write # For NPM provenance

jobs:
  # Quality checks before publishing
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run type generation
        run: bun run generate

      - name: Run TypeScript checks
        run: bun run typecheck

      - name: Build package
        run: bun run build

      - name: Check package size
        run: |
          SIZE=$(du -sh dist | cut -f1)
          echo "Package size: $SIZE"

          # Fail if package is too large (e.g., > 50MB)
          SIZE_BYTES=$(du -sb dist | cut -f1)
          if [ $SIZE_BYTES -gt 52428800 ]; then
            echo "❌ Package size exceeds 50MB limit!"
            exit 1
          fi

      - name: Validate package.json
        run: |
          # Check required fields
          node -e "
            const pkg = require('./package.json');
            const required = ['name', 'version', 'description', 'main', 'types', 'exports'];
            const missing = required.filter(field => !pkg[field]);
            if (missing.length > 0) {
              console.error('Missing required fields:', missing);
              process.exit(1);
            }
            console.log('✅ package.json validation passed');
          "

      - name: Test package exports
        run: |
          # Test CommonJS imports
          cat > test-exports.cjs << 'EOF'
          const { SKILLS } = require('./dist');
          const { SkillSchema } = require('./dist/schemas/zod');
          const { SkillHridEnum } = require('./dist/constants');
          const { getSkill } = require('./dist/game-logic');
          const { PlayerDataSchema } = require('./dist/player-data');
          const { getTranslatedSkillName } = require('./dist/localization');

          console.log('✅ CommonJS imports successful');
          console.log('Skills count:', Object.keys(SKILLS).length);
          EOF

          # Test the imports
          node test-exports.cjs

          # Test TypeScript imports
          cat > test-imports.ts << 'EOF'
          import { SKILLS } from './dist';
          import { SkillSchema } from './dist/schemas/zod';
          import { SkillHrid } from './dist/game-logic/skills';
          import type { PlayerData } from './dist/player-data';

          const skill: typeof SKILLS[keyof typeof SKILLS] = SKILLS['/skills/attack'];
          console.log('✅ TypeScript imports successful');
          EOF

          # Just compile, don't run
          npx tsc --noEmit test-imports.ts --module commonjs --esModuleInterop --skipLibCheck || echo "TypeScript check completed"

  publish:
    name: Publish to NPM
    needs: quality-checks
    runs-on: ubuntu-latest
    environment: npm-publish # GitHub environment for protection

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Generate and build
        run: |
          bun run generate
          bun run build

      - name: Configure version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          fi

      - name: Verify NPM authentication
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            npm publish --access public --tag ${{ github.event.inputs.tag }}
          else
            npm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          body: |
            ## 📦 @c3d.gg/mwi-types ${{ github.ref_name }}

            ### Installation
            ```bash
            npm install @c3d.gg/mwi-types@${{ github.ref_name }}
            # or
            bun add @c3d.gg/mwi-types@${{ github.ref_name }}
            ```

            ### What's Changed
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.

            ### NPM Package
            View on NPM: https://www.npmjs.com/package/@c3d.gg/mwi-types/v/${{ github.ref_name }}
          generate_release_notes: true
          files: |
            dist/**/*

      - name: Notify success
        if: success()
        run: |
          echo "✅ Successfully published @c3d.gg/mwi-types@$VERSION to NPM!"
          echo "View at: https://www.npmjs.com/package/@c3d.gg/mwi-types"

      - name: Notify failure
        if: failure()
        run: |
          echo "❌ Failed to publish package to NPM"
          echo "Check the logs above for error details"
