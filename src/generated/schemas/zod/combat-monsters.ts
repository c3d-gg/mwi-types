/**
 * Auto-generated file - DO NOT EDIT
 * Generated on 2025-07-26T21:25:23.125Z
 */

import { z } from 'zod'
import { AbilityHridEnum } from './abilities.js'
import { ItemHridEnum } from './items.js'
import { CombatStyleHridEnum } from './combat-styles.js'
import { DamageTypeHridEnum } from './damage-types.js'
export const CombatMonsterHridEnum = z.enum(['/monsters/abyssal_imp', '/monsters/acrobat', '/monsters/alligator', '/monsters/anchor_shark', '/monsters/aquahorse', '/monsters/black_bear', '/monsters/brine_marksman', '/monsters/butterjerry', '/monsters/captain_fishhook', '/monsters/centaur_archer', '/monsters/chronofrost_sorcerer', '/monsters/crab', '/monsters/crystal_colossus', '/monsters/demonic_overlord', '/monsters/deranged_jester', '/monsters/dodocamel', '/monsters/dusk_revenant', '/monsters/elementalist', '/monsters/enchanted_bishop', '/monsters/enchanted_king', '/monsters/enchanted_knight', '/monsters/enchanted_pawn', '/monsters/enchanted_queen', '/monsters/enchanted_rook', '/monsters/eye', '/monsters/eyes', '/monsters/flame_sorcerer', '/monsters/fly', '/monsters/frog', '/monsters/giant_shoebill', '/monsters/gobo_boomy', '/monsters/gobo_chieftain', '/monsters/gobo_shooty', '/monsters/gobo_slashy', '/monsters/gobo_smashy', '/monsters/gobo_stabby', '/monsters/granite_golem', '/monsters/griffin', '/monsters/grizzly_bear', '/monsters/gummy_bear', '/monsters/ice_sorcerer', '/monsters/infernal_warlock', '/monsters/jackalope', '/monsters/juggler', '/monsters/jungle_sprite', '/monsters/luna_empress', '/monsters/magician', '/monsters/magnetic_golem', '/monsters/manticore', '/monsters/marine_huntress', '/monsters/myconid', '/monsters/nom_nom', '/monsters/novice_sorcerer', '/monsters/panda', '/monsters/polar_bear', '/monsters/porcupine', '/monsters/rabid_rabbit', '/monsters/rat', '/monsters/red_panda', '/monsters/sea_snail', '/monsters/skunk', '/monsters/slimy', '/monsters/snake', '/monsters/soul_hunter', '/monsters/squawker', '/monsters/stalactite_golem', '/monsters/swampy', '/monsters/the_kraken', '/monsters/the_watcher', '/monsters/tidal_conjuror', '/monsters/treant', '/monsters/turtle', '/monsters/vampire', '/monsters/veyes', '/monsters/werewolf', '/monsters/zombie', '/monsters/zombie_bear'] as const)
export type CombatMonsterHrid = z.infer<typeof CombatMonsterHridEnum>
export const CombatMonsterSchema = z.object({
  hrid: CombatMonsterHridEnum,
  name: z.string(),
  combatDetails: z.object({
  currentHitpoints: z.number(),
  maxHitpoints: z.number(),
  currentManapoints: z.number(),
  maxManapoints: z.number(),
  attackInterval: z.number(),
  stabAccuracyRating: z.number(),
  slashAccuracyRating: z.number(),
  smashAccuracyRating: z.number(),
  rangedAccuracyRating: z.number(),
  magicAccuracyRating: z.number(),
  stabMaxDamage: z.number(),
  slashMaxDamage: z.number(),
  smashMaxDamage: z.number(),
  rangedMaxDamage: z.number(),
  magicMaxDamage: z.number(),
  stabEvasionRating: z.number(),
  slashEvasionRating: z.number(),
  smashEvasionRating: z.number(),
  rangedEvasionRating: z.number(),
  magicEvasionRating: z.number(),
  totalArmor: z.number(),
  totalWaterResistance: z.number(),
  totalNatureResistance: z.number(),
  totalFireResistance: z.number(),
  totalThreat: z.number(),
  combatLevel: z.number(),
  staminaLevel: z.number(),
  intelligenceLevel: z.number(),
  attackLevel: z.number(),
  powerLevel: z.number(),
  defenseLevel: z.number(),
  rangedLevel: z.number(),
  magicLevel: z.number(),
  combatStats: z.object({
  combatStyleHrids: z.array(CombatStyleHridEnum),
  damageType: DamageTypeHridEnum,
  attackInterval: z.number(),
  autoAttackDamage: z.number().optional(),
  stabEvasion: z.number().optional(),
  slashEvasion: z.number().optional(),
  smashEvasion: z.number().optional(),
  fireAmplify: z.number().optional(),
  waterAmplify: z.number().optional(),
  natureAmplify: z.number().optional(),
  waterResistance: z.number().optional(),
  natureResistance: z.number().optional(),
  fireResistance: z.number().optional(),
  hpRegenPer10: z.number().optional(),
  mpRegenPer10: z.number().optional(),
  tenacity: z.number().optional(),
  rangedEvasion: z.number().optional(),
  magicEvasion: z.number().optional(),
  stabDamage: z.number().optional(),
  slashDamage: z.number().optional(),
  smashDamage: z.number().optional(),
  rangedDamage: z.number().optional(),
  magicDamage: z.number().optional(),
  lifeSteal: z.number().optional(),
  manaLeech: z.number().optional(),
  parry: z.number().optional(),
  criticalRate: z.number().optional(),
  criticalDamage: z.number().optional(),
  healingPower: z.number().optional(),
  stabAccuracy: z.number().optional(),
  slashAccuracy: z.number().optional(),
  smashAccuracy: z.number().optional(),
  rangedAccuracy: z.number().optional(),
  magicAccuracy: z.number().optional(),
  armorPenetration: z.number().optional(),
  firePenetration: z.number().optional(),
  waterPenetration: z.number().optional(),
  naturePenetration: z.number().optional(),
  abilityHaste: z.number().optional(),
  healingAmplify: z.number().optional(),
  stamina: z.number().optional(),
  intelligence: z.number().optional(),
  attack: z.number().optional(),
  power: z.number().optional(),
  defense: z.number().optional(),
  ranged: z.number().optional(),
  magic: z.number().optional(),
  armor: z.number().optional(),
  curse: z.number().optional(),
  blaze: z.number().optional(),
  bloom: z.number().optional(),
  ripple: z.number().optional(),
  fury: z.number().optional(),
  weaken: z.number().optional(),
  mayhem: z.number().optional(),
  pierce: z.number().optional(),
  physicalThorns: z.number().optional(),
  elementalThorns: z.number().optional(),
  castSpeed: z.number().optional(),
  threat: z.number().optional()
})
}),
  elite1CombatDetails: z.object({
  currentHitpoints: z.number(),
  maxHitpoints: z.number(),
  currentManapoints: z.number(),
  maxManapoints: z.number(),
  attackInterval: z.number(),
  stabAccuracyRating: z.number(),
  slashAccuracyRating: z.number(),
  smashAccuracyRating: z.number(),
  rangedAccuracyRating: z.number(),
  magicAccuracyRating: z.number(),
  stabMaxDamage: z.number(),
  slashMaxDamage: z.number(),
  smashMaxDamage: z.number(),
  rangedMaxDamage: z.number(),
  magicMaxDamage: z.number(),
  stabEvasionRating: z.number(),
  slashEvasionRating: z.number(),
  smashEvasionRating: z.number(),
  rangedEvasionRating: z.number(),
  magicEvasionRating: z.number(),
  totalArmor: z.number(),
  totalWaterResistance: z.number(),
  totalNatureResistance: z.number(),
  totalFireResistance: z.number(),
  totalThreat: z.number(),
  combatLevel: z.number(),
  staminaLevel: z.number(),
  intelligenceLevel: z.number(),
  attackLevel: z.number(),
  powerLevel: z.number(),
  defenseLevel: z.number(),
  rangedLevel: z.number(),
  magicLevel: z.number(),
  combatStats: z.object({
  combatStyleHrids: z.array(CombatStyleHridEnum),
  damageType: DamageTypeHridEnum,
  attackInterval: z.number(),
  autoAttackDamage: z.number().optional(),
  stabEvasion: z.number().optional(),
  slashEvasion: z.number().optional(),
  smashEvasion: z.number().optional(),
  fireAmplify: z.number().optional(),
  waterAmplify: z.number().optional(),
  natureAmplify: z.number().optional(),
  waterResistance: z.number().optional(),
  natureResistance: z.number().optional(),
  fireResistance: z.number().optional(),
  hpRegenPer10: z.number().optional(),
  mpRegenPer10: z.number().optional(),
  tenacity: z.number().optional(),
  rangedEvasion: z.number().optional(),
  magicEvasion: z.number().optional(),
  stabDamage: z.number().optional(),
  slashDamage: z.number().optional(),
  smashDamage: z.number().optional(),
  rangedDamage: z.number().optional(),
  magicDamage: z.number().optional(),
  lifeSteal: z.number().optional(),
  manaLeech: z.number().optional(),
  parry: z.number().optional(),
  criticalRate: z.number().optional(),
  criticalDamage: z.number().optional(),
  healingPower: z.number().optional(),
  stabAccuracy: z.number().optional(),
  slashAccuracy: z.number().optional(),
  smashAccuracy: z.number().optional(),
  rangedAccuracy: z.number().optional(),
  magicAccuracy: z.number().optional(),
  armorPenetration: z.number().optional(),
  firePenetration: z.number().optional(),
  waterPenetration: z.number().optional(),
  naturePenetration: z.number().optional(),
  abilityHaste: z.number().optional(),
  healingAmplify: z.number().optional(),
  stamina: z.number().optional(),
  intelligence: z.number().optional(),
  attack: z.number().optional(),
  power: z.number().optional(),
  defense: z.number().optional(),
  ranged: z.number().optional(),
  magic: z.number().optional(),
  armor: z.number().optional(),
  curse: z.number().optional(),
  blaze: z.number().optional(),
  bloom: z.number().optional(),
  ripple: z.number().optional(),
  fury: z.number().optional(),
  weaken: z.number().optional(),
  mayhem: z.number().optional(),
  pierce: z.number().optional(),
  physicalThorns: z.number().optional(),
  elementalThorns: z.number().optional(),
  castSpeed: z.number().optional(),
  threat: z.number().optional()
})
}),
  elite2CombatDetails: z.object({
  currentHitpoints: z.number(),
  maxHitpoints: z.number(),
  currentManapoints: z.number(),
  maxManapoints: z.number(),
  attackInterval: z.number(),
  stabAccuracyRating: z.number(),
  slashAccuracyRating: z.number(),
  smashAccuracyRating: z.number(),
  rangedAccuracyRating: z.number(),
  magicAccuracyRating: z.number(),
  stabMaxDamage: z.number(),
  slashMaxDamage: z.number(),
  smashMaxDamage: z.number(),
  rangedMaxDamage: z.number(),
  magicMaxDamage: z.number(),
  stabEvasionRating: z.number(),
  slashEvasionRating: z.number(),
  smashEvasionRating: z.number(),
  rangedEvasionRating: z.number(),
  magicEvasionRating: z.number(),
  totalArmor: z.number(),
  totalWaterResistance: z.number(),
  totalNatureResistance: z.number(),
  totalFireResistance: z.number(),
  totalThreat: z.number(),
  combatLevel: z.number(),
  staminaLevel: z.number(),
  intelligenceLevel: z.number(),
  attackLevel: z.number(),
  powerLevel: z.number(),
  defenseLevel: z.number(),
  rangedLevel: z.number(),
  magicLevel: z.number(),
  combatStats: z.object({
  combatStyleHrids: z.array(CombatStyleHridEnum),
  damageType: DamageTypeHridEnum,
  attackInterval: z.number(),
  autoAttackDamage: z.number().optional(),
  stabEvasion: z.number().optional(),
  slashEvasion: z.number().optional(),
  smashEvasion: z.number().optional(),
  fireAmplify: z.number().optional(),
  waterAmplify: z.number().optional(),
  natureAmplify: z.number().optional(),
  waterResistance: z.number().optional(),
  natureResistance: z.number().optional(),
  fireResistance: z.number().optional(),
  hpRegenPer10: z.number().optional(),
  mpRegenPer10: z.number().optional(),
  tenacity: z.number().optional(),
  rangedEvasion: z.number().optional(),
  magicEvasion: z.number().optional(),
  stabDamage: z.number().optional(),
  slashDamage: z.number().optional(),
  smashDamage: z.number().optional(),
  rangedDamage: z.number().optional(),
  magicDamage: z.number().optional(),
  lifeSteal: z.number().optional(),
  manaLeech: z.number().optional(),
  parry: z.number().optional(),
  criticalRate: z.number().optional(),
  criticalDamage: z.number().optional(),
  healingPower: z.number().optional(),
  stabAccuracy: z.number().optional(),
  slashAccuracy: z.number().optional(),
  smashAccuracy: z.number().optional(),
  rangedAccuracy: z.number().optional(),
  magicAccuracy: z.number().optional(),
  armorPenetration: z.number().optional(),
  firePenetration: z.number().optional(),
  waterPenetration: z.number().optional(),
  naturePenetration: z.number().optional(),
  abilityHaste: z.number().optional(),
  healingAmplify: z.number().optional(),
  stamina: z.number().optional(),
  intelligence: z.number().optional(),
  attack: z.number().optional(),
  power: z.number().optional(),
  defense: z.number().optional(),
  ranged: z.number().optional(),
  magic: z.number().optional(),
  armor: z.number().optional(),
  curse: z.number().optional(),
  blaze: z.number().optional(),
  bloom: z.number().optional(),
  ripple: z.number().optional(),
  fury: z.number().optional(),
  weaken: z.number().optional(),
  mayhem: z.number().optional(),
  pierce: z.number().optional(),
  physicalThorns: z.number().optional(),
  elementalThorns: z.number().optional(),
  castSpeed: z.number().optional(),
  threat: z.number().optional()
})
}),
  abilities: z.array(z.object({
  abilityHrid: AbilityHridEnum,
  level: z.number(),
  minEliteTier: z.number()
})),
  dropTable: z.array(z.object({
  itemHrid: ItemHridEnum,
  dropRate: z.number(),
  minCount: z.number(),
  maxCount: z.number(),
  minEliteTier: z.number()
})).nullable(),
  rareDropTable: z.array(z.object({
  itemHrid: ItemHridEnum,
  dropRate: z.number(),
  minCount: z.number(),
  maxCount: z.number(),
  minEliteTier: z.number()
})).nullable()
})
export type CombatMonster = z.infer<typeof CombatMonsterSchema>